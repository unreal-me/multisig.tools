<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>New Payment - multisig.tools</title>
    <link href="https://cdn.bootcss.com/bulma/0.7.1/css/bulma.min.css" rel="stylesheet">
    <style>
        .word-break {
            word-break: break-all;
            word-wrap: break-all;
        }
    </style>
</head>

<body>
    <div class="container">
        <section class="hero is-primary">
            <div class="hero-body">
                <div class="container">
                    <h1 class="title">
                        SIGNATURE LIST
                    </h1>
                    <h2 class="subtitle">
                        multisig.tools
                    </h2>
                </div>
            </div>
            <div class="hero-foot">
                <nav class="tabs is-boxed is-fullwidth">
                    <div class="container">
                        <ul>
                            <li class="is-active">
                                <a href="/">SIGNATURE LIST</a>
                            </li>
                            <li>
                                <a href="create">NEW PAYMENT</a>
                            </li>
                        </ul>
                    </div>
                </nav>
            </div>
        </section>
        <section id='hash-list'>
            Loading...
        </section>
    </div>

    <script src="https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdn.bootcss.com/socket.io/2.1.1/socket.io.js"></script>
    <script>
        $(function () {
            (function loadFFW() {
                let interval = setInterval(function () {
                    if (window.FFW) {
                        fetchData();
                        clearInterval(interval);
                    }
                }, 100);
            })();
        })
        function fetchData() {
            let data = {
                'x-stellar-timestamp': (new Date().getTime()).toString(),
                'x-stellar-address': window.FFW.address,
            }
            const signature_data = JSON.stringify(data, Object.keys(data).sort())
            window.FFW.sign(signature_data, response => {
                if (response.code === 'fail') {
                    alert('sign failed')
                } else {
                    fetch("/api/list",
                        {
                            headers: {
                                ...data,
                                'x-stellar-signature': response.data
                            },
                            method: "GET",
                        })
                        .then(res => {
                            return res.json()
                        })
                        .then(res => {
                            handleData(res)
                        })
                        .catch(res => { alert(res) })
                }
            })
        }
        function handleData(res) {
            $("#hash-list").empty()
            res.forEach(record => {
                $("#hash-list").append(
                    cardTemplate(record.hash, record.detail.sourcePaymentPublicKey, record.detail.assetCode, record.detail.receiverPublicKey, record.detail.amount)
                )

            });
        }
        function cardTemplate(hash, source, assetCode, destination, amount) {
            if (assetCode == "") {
                assetCode = "XLM"
            }
            return `
            <div class="card">
                <div class="card-content">
                    <div class="content word-break">
                        Hash: ${hash}<br>
                        Info: ${source} Pay <span class="has-text-info">${amount} ${assetCode}</span> to ${destination}<br>
                        <a href="/detail/${hash}" class="button is-primary">Detail</a>
                    </div>
                </div>
            </div>
            `
        }

    </script>

</body>

</html>